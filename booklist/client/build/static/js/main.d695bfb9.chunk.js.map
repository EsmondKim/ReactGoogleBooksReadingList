{"version":3,"sources":["components/Jumbotron/index.js","components/SearchForm/index.js","utils/API.js","components/Grid/index.js","utils/useDebounce.js","components/Results/index.js","components/Form/index.js","pages/Search.js","components/Nav/index.js","App.js","index.js"],"names":["Jumbotron","children","style","height","clear","paddingTop","textAlign","className","SearchForm","props","htmlFor","value","search","onChange","handleInputChange","name","list","type","placeholder","id","query","console","log","apiKey","process","REACT_APP_API_KEY","axios","get","then","res","data","items","map","index","thumbnail","buyLink","volumeInfo","imageLinks","saleInfo","title","author","authors","picture","synopsis","description","link","key","catch","err","Container","fluid","Row","Col","size","split","join","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","Results","FormBtn","float","marginBottom","Search","setSearch","bookResults","setBookResults","debouncedSearchTerm","API","event","target","results","book","Nav","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d695bfb9.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"language\">Book Search:</label>\r\n        <input\r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          name=\"term\"\r\n          list=\"term\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Type in your search for a book\"\r\n          id=\"term\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import axios from \"axios\";\n\nexport default {\n  //Search the API\n  searchTerms: function (query) {\n    console.log(query);\n    const apiKey = process.env.REACT_APP_API_KEY;\n    console.log(\"from API.js\", process.env);\n    console.log(\"The API KEY\", process.env.REACT_APP_API_KEY);\n\n    return axios\n      .get(\n        `https://www.googleapis.com/books/v1/volumes?q=${query}+inauthor:keyes&key=${apiKey}`\n      )\n      .then((res) => {\n        const booklist = res.data.items;\n\n        return booklist.map((index) => {\n          let thumbnail;\n          let buyLink;\n          if (index.volumeInfo.imageLinks) {\n            thumbnail = index.volumeInfo.imageLinks.thumbnail;\n          } else {\n            thumbnail = \"placeholder\";\n          }\n          if (index.saleInfo.buyLink) {\n            buyLink = index.saleInfo.buyLink;\n          } else {\n            buyLink = \"Not Available\";\n          }\n\n          return {\n            title: index.volumeInfo.title,\n            author: index.volumeInfo.authors,\n            picture: thumbnail,\n            synopsis: index.volumeInfo.description,\n            link: buyLink,\n            key: index.id,\n          };\n        });\n        // setTitle(res.data[1][0]);\n        // setAuthors(res.data);\n        // setImage(res.data);\n        // setDescription(res.data);\n        // setLink([res.data.items]);\n      })\n      .catch((err) => console.log(err));\n  },\n\n  // Gets all books\n  getBooks: function () {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function (id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData);\n  },\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n      console.log(delay);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import React from \"react\";\r\n//import API from \"../../utils/API\";\r\n//import placeholder from \"../../assets/images\";\r\n\r\nfunction Results(props) {\r\n  return (\r\n    <div>\r\n      <h5>{props.data.title}</h5>\r\n      <h5>{props.data.author}</h5>\r\n      <h5>{props.data.synopsis}</h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchForm from \"../components/SearchForm\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport useDebounce from \"../utils/useDebounce\";\nimport Results from \"../components/Results\";\n\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nfunction Search() {\n  const [search, setSearch] = useState(\"Search for a book\");\n  const [bookResults, setBookResults] = useState([]);\n  const debouncedSearchTerm = useDebounce(search, 3000);\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n\n    if (debouncedSearchTerm) {\n      API.searchTerms(debouncedSearchTerm).then((res) => {\n        setBookResults(res);\n      });\n      // .then((res) => {\n      //   if (res.data.length === 0) {\n      //     console.log(error);\n      //     throw new Error(\"No results found.\");\n      //   }\n      //   if (res.data.status === \"error\") {\n      //     console.log(error);\n      //     throw new Error(res.data.message);\n      //   }\n      // setTitle(res.data[1][0]);\n      // setAuthors(res.data);\n      // setImage(res.data);\n      // setDescription(res.data);\n      // setLink([res.data.items]);\n      //       })\n      //       .catch((err) => setError(err));\n    }\n  }, [debouncedSearchTerm]);\n\n  const handleInputChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  //***Everything below is from the original BookSearch Exercise from Class***\n  // const [book, setBook] = useState({});\n  // const [books, setBooks] = useState([]);\n  // const [formObject, setFormObject] = useState({});\n\n  // useEffect(() => {\n  //   loadBooks();\n  // }, []);\n\n  // function loadBooks() {\n  //   API.getBooks()\n  //     .then((res) => setBooks(res.data))\n  //     .catch((err) => console.log(err));\n  // }\n\n  // function deleteBook(id) {\n  //   API.deleteBook(id)\n  //     .then((res) => loadBooks())\n  //     .catch((err) => console.log(err));\n  // }\n\n  // function handleInputChange(event) {\n  //   const { name, value } = event.target;\n  //   setFormObject({ ...formObject, [name]: value });\n  // }\n\n  // function handleFormSubmit(event) {\n  //   event.preventDefault();\n  //   if (formObject.title && formObject.authors) {\n  //     API.saveBook({\n  //       title: formObject.title,\n  //       authors: formObject.authors,\n  //       description: formObject.description,\n  //       image: formObject.image,\n  //       link: formObject.link,\n  //     })\n  //       .then((res) => loadBooks())\n  //       .catch((err) => console.log(err));\n  //   }\n  // }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-6\">\n          <Jumbotron>\n            <h1>Search for a book</h1>\n          </Jumbotron>\n          <SearchForm handleInputChange={handleInputChange} results={search} />\n          <FormBtn\n\n          // disabled={!(formObject.authors && formObject.title)}\n          // onClick={handleFormSubmit}\n          >\n            Submit Book\n          </FormBtn>\n        </Col>\n        <Col size=\"md-6 sm-12\">\n          <Jumbotron>\n            <h1>Results</h1>\n            <Row>\n              <Col size=\"md-12\">\n                <Jumbotron>\n                  {console.log(\"hit that shit\")}\n                  {bookResults.map((book) => {\n                    return <Results data={book} key={book.id} />;\n                  })}\n                  {console.log(\"past that shit\")}\n                  <h1>{/* {book.title} written by: {book.authors} */}</h1>\n                </Jumbotron>\n              </Col>\n            </Row>\n            <Row>\n              <Col size=\"md-10 md-offset-1\">\n                <article>\n                  <h1>Description</h1>\n                  {/* <p>{book.description}</p> */}\n                </article>\n              </Col>\n            </Row>\n          </Jumbotron>\n          {/* {books.length ? (\n            <List>\n              {books.map((book) => (\n                <ListItem key={book._id}>\n                  <Link to={\"/books/\" + book._id}>\n                    <strong>\n                      {book.title} by {book.authors} {book.description}{\" \"}\n                      {book.image} {book.link}\n                    </strong>\n                  </Link>\n                  <DeleteBtn onClick={() => deleteBook(book._id)} />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <h3>No Results to Display</h3>\n          )} */}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        React Reading List\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport Books from \"./pages/Search\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// The app will not render correctly until you setup a Route component.\n// Refer to the Basic Example documentation if you need to.\n// (https://reacttraining.com/react-router/web/example/basic)\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Nav />\n        <Books />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}